import{_ as i,c as a,o as e,ag as t}from"./chunks/framework._6d57y5r.js";const k=JSON.parse('{"title":"switch Remote branch","description":"","frontmatter":{},"headers":[],"relativePath":"Tech/~/git/git-switch-remote.md","filePath":"Tech/~/git/git-switch-remote.md","lastUpdated":1761372659000}'),h={name:"Tech/~/git/git-switch-remote.md"};function n(l,s,p,o,c,r){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="switch-remote-branch" tabindex="-1">switch Remote branch <a class="header-anchor" href="#switch-remote-branch" aria-label="Permalink to &quot;switch Remote branch&quot;">​</a></h1><p>우선 원격지 형상을 받아오기 위해 <code>fetch</code> 명령어를 사용.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span></code></pre></div><p>여기서 <code>-p</code>는 <code>--prune</code> 옵션으로 원격 저장소에서 이미 삭제된 브렌치/태그를 로컬에서 제거 하는 옵션입니다</p><blockquote><p>prune는 사전적 의미로는 <code>치다</code> 라는 의미를 지니고 있어, 불필요한 것을 쳐낸다로 기억하면 쉬움</p></blockquote><h2 id="코드만-보고-싶음" tabindex="-1">코드만 보고 싶음 <a class="header-anchor" href="#코드만-보고-싶음" aria-label="Permalink to &quot;코드만 보고 싶음&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/feature/foo</span></span></code></pre></div><h2 id="코드-보고-수정까지-하고-싶음" tabindex="-1">코드 보고 수정까지 하고 싶음 <a class="header-anchor" href="#코드-보고-수정까지-하고-싶음" aria-label="Permalink to &quot;코드 보고 수정까지 하고 싶음&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> switch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/feature/foo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 의 경우 feature/foo 브렌치 생성 후 이동</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/feature/foo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 위와 동일</span></span></code></pre></div>`,9)]))}const g=i(h,[["render",n]]);export{k as __pageData,g as default};
