import{_ as t,c as r,o as i,ag as s}from"./chunks/framework._6d57y5r.js";const x=JSON.parse('{"title":"리눅스 특수권한(rws)","description":"","frontmatter":{},"headers":[],"relativePath":"Tech/~/linux/rws.md","filePath":"Tech/~/linux/rws.md","lastUpdated":1761174103000}'),l={name:"Tech/~/linux/rws.md"};function d(o,e,a,c,u,n){return i(),r("div",null,e[0]||(e[0]=[s('<h1 id="리눅스-특수권한-rws" tabindex="-1">리눅스 특수권한(rws) <a class="header-anchor" href="#리눅스-특수권한-rws" aria-label="Permalink to &quot;리눅스 특수권한(rws)&quot;">​</a></h1><p>보통 리눅스 권한은</p><ul><li>r : read</li><li>w : write</li><li>x : execute</li></ul><p>이지만 <code>x</code> 자리에 <code>s</code> 가 들어가는 경우가 있다.</p><h2 id="setuid-set-user-id" tabindex="-1">setuid (Set User ID) <a class="header-anchor" href="#setuid-set-user-id" aria-label="Permalink to &quot;setuid (Set User ID)&quot;">​</a></h2><p>목적</p><ul><li>실행파일을 그 파일의 소유자 권한으로 실행하게 함.</li></ul><p>표시</p><ul><li><code>-rwsr-xr-x</code>: 소유자 위치에 s -&gt; setuid 실행 가능</li><li><code>&#39;-rwSr-xr-x</code>: <code>S</code>의 경우 setuid는 설정되어 있지만 실행 비트(x)가 꺼져있음 (비정상적)</li><li>숫자(octet): 4000 (ex: chmod 4755 file &gt; setuid + rwxr-xr-x)</li></ul><p><strong>자주보이는 setuid 바이너리</strong></p><ul><li><code>/usr/bin/passwd</code>: 사용자 비밀번호 변경 시 암호DB(예: /etc/shadow) 에 쓰기 권한이 필요하기 때문에 root 권한으로 동작.</li></ul><h2 id="setgid-set-grop-id" tabindex="-1">setgid (Set Grop ID) <a class="header-anchor" href="#setgid-set-grop-id" aria-label="Permalink to &quot;setgid (Set Grop ID)&quot;">​</a></h2><p>목적</p><ul><li>파일: 실행파일을 그 파일의 그룹 권한으로 실행하게 함.</li><li>그룹: 디렉토리에 setgid가 있을 경우 해당 디렉토리 안에 새로 생성된 파일, 디렉토리는 부모 디렉토리 그룹을 상속 받음.</li></ul><p>표시</p><ul><li>파일 : <code>-rwxr-sr-x</code></li><li>그룹 : <code>drwxr-sr-x</code></li><li>숫자(octet): 2000 (ex: chmod 2755 dir)</li></ul>',16)]))}const h=t(l,[["render",d]]);export{x as __pageData,h as default};
