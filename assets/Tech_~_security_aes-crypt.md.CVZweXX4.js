import{_ as e,c as a,o as r,ag as o}from"./chunks/framework._6d57y5r.js";const _=JSON.parse('{"title":"AES crypt","description":"","frontmatter":{},"headers":[],"relativePath":"Tech/~/security/aes-crypt.md","filePath":"Tech/~/security/aes-crypt.md","lastUpdated":1761311303000}'),c={name:"Tech/~/security/aes-crypt.md"};function s(i,t,p,l,d,n){return r(),a("div",null,t[0]||(t[0]=[o('<h1 id="aes-crypt" tabindex="-1">AES crypt <a class="header-anchor" href="#aes-crypt" aria-label="Permalink to &quot;AES crypt&quot;">​</a></h1><blockquote><p>Advanced Encryption Standard</p></blockquote><p><code>AES</code>는 대칭키 암호화 알고리즘으로 <code>DES</code>를 대체하고 표준처럼 사용하고 있음<br><code>AES</code> 128, 192, 256는 키 크기(bit)를 의미하는 것으로 블록 크기는 모두 128비트로 같다</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>대칭키 방식은 암호화와 복호화에 같은 키를 사용해요<br> 키만 교환된다면 암복호화가 가능합니다</p></div><h2 id="블럭-암호" tabindex="-1">블럭 암호 <a class="header-anchor" href="#블럭-암호" aria-label="Permalink to &quot;블럭 암호&quot;">​</a></h2><p><code>AES</code>는 블럭 암호 기반 알고리즘을 사용한다<br> 블럭 암호란?</p><ul><li>평문을 일정한 블록(Block) 단위로 나누어 각 블록마다 암호화 과정을 수행하는 방식</li></ul><p>패딩(padding)이란?</p><ul><li>일정 블록 단위로 나누게 되면 마지막 빈 부분을 0이나 다른값으로 채우게 되는데 이걸 패딩이라고 함</li><li>그 채우게 되는 값을 패딩값 이라고 함</li></ul><h2 id="운영-모드" tabindex="-1">운영 모드 <a class="header-anchor" href="#운영-모드" aria-label="Permalink to &quot;운영 모드&quot;">​</a></h2><p>블럭 암호는 같은 비밀 키를 사용할 경우 <strong>같은 입력(평문 블록)에 대해 항상 같은 출력(암호문)</strong> 을 내놓는 결정론적(Deterministic) 방식이다<br> 만약 메시지에 &quot;HELLOHELLOHELLOHELLOHELLOHELLO&quot; 처럼 내용이 반복되는 블록이 있다면, 암호문에서도 같은 부분이 반되어 패턴이 노출되는 현상이 있다.</p><p>그래서 나온게 바로 <strong>운영 모드</strong>이다</p><p><strong>운영 모드</strong>는 각 블록을 어떻게 연결해서 암호화할지 정하는 규칙이다<br> 즉, 한 블록의 암호화 결과가 다음 블록 암호화에 어떤 식으로 영향을 줄 것인가?<br> 이걸 정하는 모드의 역할이다</p>',13)]))}const h=e(c,[["render",s]]);export{_ as __pageData,h as default};
