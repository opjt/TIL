import{_ as l,c as a,o,ag as t}from"./chunks/framework._6d57y5r.js";const u=JSON.parse('{"title":"비대칭키 암호화 (공개키 암호화)","description":"","frontmatter":{},"headers":[],"relativePath":"Tech/~/security/public-key-crypto.md","filePath":"Tech/~/security/public-key-crypto.md","lastUpdated":1760164277000}'),i={name:"Tech/~/security/public-key-crypto.md"};function c(r,e,s,d,n,p){return o(),a("div",null,e[0]||(e[0]=[t('<h1 id="비대칭키-암호화-공개키-암호화" tabindex="-1">비대칭키 암호화 (공개키 암호화) <a class="header-anchor" href="#비대칭키-암호화-공개키-암호화" aria-label="Permalink to &quot;비대칭키 암호화 (공개키 암호화)&quot;">​</a></h1><ul><li><code>ssh</code>로 서버를 접속하기 위해 <code>password</code>를 입력하거나 사전에 준비된 키를 통해 서버에 접속합니다.</li><li>이때 사용하는 SSH-Key 형식이 바로 <code>비대칭키</code> 입니다</li></ul><h2 id="why-비대칭키" tabindex="-1">Why 비대칭키? <a class="header-anchor" href="#why-비대칭키" aria-label="Permalink to &quot;Why 비대칭키?&quot;">​</a></h2><p>왜 비대칭키를 사용할까요?</p><ul><li>대칭키를 사용할 경우 양쪽다 같은 키를 배포해야합니다 <ul><li>암호화에 쓸 키를 서로 공유해야 하는데, 이 키를 어떻게 안전하게 주고받을지 문제가 생김.</li><li>이 키를 전송하는 과정에서 해커가 가로채면 &gt; 보안 시스템 무너짐.</li></ul></li></ul><p>비대칭키 방식은 <code>공개키</code>와 <code>개인키</code>를 지니고 있습니다 (그래서 공개키 암호화형식이라고도 함.)</p><h2 id="비대칭키-플로우" tabindex="-1">비대칭키 플로우 <a class="header-anchor" href="#비대칭키-플로우" aria-label="Permalink to &quot;비대칭키 플로우&quot;">​</a></h2><blockquote><p><code>ssh</code>로 서버에 접속할 때, 해당 플로우 외에도 사전 작업이 존재하지만 본 글에서는 제외.</p></blockquote><ol><li>클라이언트는 개인키와 공개키 쌍을 미리 생성하고, 서버에 공개키를 등록해 둡니다.</li><li>클라이언트가 접속을 시도하면, 서버는 무작위 Challenge 데이터를 생성하여 클라이언트에게 전달합니다.</li><li>클라이언트는 Challenge 데이터를 <strong>자신의 개인키로 서명</strong>하여 서버에 전달합니다.</li><li>서버는 클라이언트가 등록한 <strong>공개키로 서명을 검증</strong>하여, 클라이언트의 신원을 확인합니다.</li></ol><p>어떻게 다른키로 암호화 한 것을 복호화 할 수 있을까?</p>',10)]))}const _=l(i,[["render",c]]);export{u as __pageData,_ as default};
