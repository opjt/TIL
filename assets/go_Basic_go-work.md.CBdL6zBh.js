import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"Go Work","description":"","frontmatter":{},"headers":[],"relativePath":"go/Basic/go-work.md","filePath":"go/Basic/go-work.md","lastUpdated":1747654439000}'),p={name:"go/Basic/go-work.md"};function l(t,s,e,k,o,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="go-work" tabindex="-1">Go Work <a class="header-anchor" href="#go-work" aria-label="Permalink to &quot;Go Work&quot;">​</a></h1><blockquote><p><code>go work</code>는 여러 개의 <code>go.mod</code> 모듈을 하나의 작업 공간(workspace)으로 묶어주는 기능입니다. 이를 통해 모듈 간 의존성을 간편하게 관리할 수 있습니다.</p></blockquote><p><strong>예시 구조</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main-app/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (go.mod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">있음</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared-lib/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (go.mod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">있음</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="go-work-사용법" tabindex="-1"><code>go work</code> 사용법 <a class="header-anchor" href="#go-work-사용법" aria-label="Permalink to &quot;\`go work\` 사용법&quot;">​</a></h2><ol><li><p><code>go work</code> 초기화</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> work</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./shared-lib</span></span></code></pre></div></li><li><p>생성된 <code>go.work</code> 파일 예시:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.24.2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ./main-app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ./shared-lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ol><h2 id="go-work이-존재하기-전" tabindex="-1">go work이 존재하기 전 <a class="header-anchor" href="#go-work이-존재하기-전" aria-label="Permalink to &quot;go work이 존재하기 전&quot;">​</a></h2><blockquote><p><code>go work</code>가 없던 시절(Go 1.17 이하)에는 go.mod의 replace 구문을 통해 로컬 모듈 경로를 수동으로 지정하여야 했습니다.</p></blockquote><p>예시: main-app/go.mod</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yourname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.17</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">require github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yourname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shared</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lib v0.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">replace github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yourname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shared</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shared</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lib</span></span></code></pre></div>`,10)]))}const c=i(p,[["render",l]]);export{g as __pageData,c as default};
